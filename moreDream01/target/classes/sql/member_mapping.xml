<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="memberSql">

	<resultMap type="member" id="memberRM">
		<result property="memberId" column="MEMBERID" />
		<result property="email" column="EMAIL" />
		<result property="password" column="PASSWORD" />
		<result property="memberCode" column="MEMBERCODE" />
		<result property="address" column="ADDRESS" />
		<result property="name" column="NAME" />
		<result property="phoneNumber" column="PHONENUMBER" />
		<result property="member_newFilename" column="MEMBER_NEWFILENAME" />
		<result property="member_orgFilename" column="MEMBER_ORGFILENAME" />
	</resultMap>
	
	<!-- 회원가입 -->
	<insert id="registerMember" parameterType="member">
		<selectKey keyProperty="memberId" resultType="int" order="BEFORE">
				SELECT member_seq.nextVal FROM dual
		</selectKey>
		
		INSERT 
		into member (memberId, email, password, memberCode, address, name, phoneNumber, member_newFilename, member_orgFilename) 
		 values(#{memberId},#{email},#{password},#{memberCode},
		#{address},#{name},#{phoneNumber},#{member_newFilename},#{member_orgFilename}) 
	</insert>

	<!-- 이메일 중복확인 -->
	<select id="existEmail" parameterType="string" resultType="string">
		SELECT email FROM member
		WHERE email=#{value}
	</select>
	
	<!-- 로그인  -->
	<select id="login" parameterType="member" resultMap="memberRM">
		SELECT 
		memberId, email, password, memberCode, address, name, phoneNumber, member_newFilename, member_orgFilename 
		FROM member
		WHERE email=#{email} AND password=#{password}
	</select>
	
	<!-- 회원정보 수정 -->
	<update id="updateMember" parameterType="member">
	UPDATE member set
	email=#{email}, password=#{password}, address=#{address}, name=#{name}, 
	phoneNumber=#{phoneNumber}, member_newFilename=#{member_newFilename}, 
	member_orgFilename=#{member_orgFilename}
	where memberId=#{memberId}
	</update>
	
	<!-- 회원탈퇴 : 개인정보 컬럼 모두 '-' 로 변경하고  
	memberCode D으로 변경 하며  memberCode가 D인 것은 view 에서 비활성화  -->
	
	<update id="deleteMember" parameterType="member">
	UPDATE member set
	email='-', password='-', address='-', name='-', 
	phoneNumber='-', member_newFilename='-', 
	member_orgFilename='-', memberCode='D'
	where memberId=#{memberId}
	</update>
	

	<select id="getMemberList" resultMap="memberRM">
		SELECT
		memberId, email, password, memberCode, address, name, phoneNumber, member_newFilename, member_orgFilename
		FROM member
	</select>
	
	
	<!-- 파일삭제 -->
	<update id="deleteFileMember" parameterType="string">
	UPDATE member set
	member_newFilename='-', 
	member_orgFilename='-' 
	where member_newFilename=#{value}
	</update>
	
</mapper>	

 