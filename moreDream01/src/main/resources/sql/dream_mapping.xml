<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dreamSql">

	<!-- 꿈 목록 :: dreamListRM -->
	<resultMap type="dream" id="dreamListRM">
		<result property="dreamId" column="dreamId" />
		<result property="memberVO.memberId" column="memberId" />
		<result property="memberVO.name" column="name" />
		<result property="memberVO.member_newFilename" column="member_newFilename"/>
		<result property="dream_newFilename" column="dream_newFilename" />
		<result property="titleDream" column="titleDream" />
		<result property="targetFund" column="targetFund" />
		<result property="startDate" column="startDate" />
		<result property="endDate" column="endDate" />
	</resultMap>

	<!-- 전체 :: dreamRM -->
	<resultMap type="dream" id="dreamRM" extends="dreamListRM">
		<result property="category" column="category" />
		<result property="confirmRequestDream" column="confirmRequestDream" />
		<result property="detailDream" column="detailDream" />
		<result property="requestDate" column="requestDate" />
	</resultMap>

	<!-- dreamer :: 꿈 신청 -->
	<insert id="requestDream" parameterType="dream">
		<!-- 이걸 먼저 돌리면 리턴됨..keyProperty는 setProperty와 같다. -->
		<selectKey keyProperty="dreamId" resultType="int" order="BEFORE">
			SELECT dream_seq.nextVal FROM dual
		</selectKey>

		INSERT
		INTO dream(dreamId, memberId, category, dream_orgFilename,
		dream_newFilename, confirmRequestDream, titleDream, detailDream,
		requestDate, targetFund, startDate, endDate)
		VALUES ( #{dreamId},
		#{memberVO.memberId}, #{category}, #{dream_orgFilename},
		#{dream_newFilename}, ' ',
		#{titleDream},
		#{detailDream}, sysdate,
		#{targetFund}, #{startDate}, #{endDate} )

		<!-- count는 기본으로 0이 되어있다. 초기 생성시 넣어주지 않아도 됨.. 후에 조회수 update.. #{}은 getter를 
			의미한다. -->
	</insert>

	<!-- manager :: 게시전 꿈 삭제 -->
	<!-- 게시 후는 confirm을 N으로 바꾸기만 해서 비활성 -->
	<delete id="deleteDream">
		DELETE FROM dream
		WHERE dreamId=#{dreamId} AND
		confirmRequestDream='N'
	</delete>

	<!-- sql 모듈화 :: dream -->
	<sql id="select_dreams">
		SELECT dreamid,memberid,name,member_newFilename, category,
		dream_newFilename,confirmRequestDream,
		titleDream,detailDream,requestDate,targetFund,
		startDate,endDate FROM 
		(SELECT d.dreamId, m.memberId, m.name, m.member_newFilename, d.category,
		d.dream_newFilename, d.confirmRequestDream,
		d.titleDream, d.detailDream,
		TO_char(requestDate, 'yyyy-MM-dd') AS requestDate, targetFund,
		TO_char(startDate, 'yyyy-MM-dd') AS startDate,
		TO_char(endDate, 'yyyy-MM-dd') AS endDate
		FROM dream d, member m where d.memberid=m.memberid)
	</sql>

	<!-- 현재 날짜 가져오기 :: 남은 기간 계산 -->
	<select id="showNowDate" resultType="string">
		SELECT sysdate FROM dual
	</select>

	<!-- 카테고리별 검색 --><!-- 160616 조건문 추가 -->
	<select id="selectByCategory" parameterType="string" resultMap="dreamListRM">
		<include refid="select_dreams" />
		WHERE category = #{value} AND confirmrequestdream='Y'
	</select>

	<!-- dream 상세보기 -->
	<select id="getDetailDreamByDreamId" resultMap="dreamRM">
		<include refid="select_dreams" />
		WHERE dreamId = #{dreamId}
	</select>

	<!-- 키워드 검색 160617 수정-->
	<select id="selectByKeyWord" parameterType="string" resultMap="dreamRM">
		<include refid="select_dreams" />
		where titleDream like '%'||#{value}||'%'
		or detailDream like
		'%'||#{value}||'%'
	</select>

	<!-- 전체 가져오기 필터 :: View에서 User는 confirmRequestDream가 Y인 것만, Admin은 Y/N 모두 -->
	<select id="getAllListDream" resultMap="dreamRM">

		<include refid="select_dreams" />
		where confirmRequestDream='Y'
		order by startdate desc

	</select>



	<!-- dreamer :: 보상 등록 -->
	<insert id="registerReward" parameterType="reward">
		<selectKey keyProperty="rewardId" resultType="int" order="BEFORE">
			SELECT reward_seq.nextVal FROM dual
		</selectKey>

		INSERT
		INTO reward(rewardId, dreamId, rewardInfo, rewardGuide, stock)
		VALUES(#{rewardId}, #{dreamVO.dreamId}, #{rewardInfo},
		#{rewardGuide},#{stock})
	</insert>

	<!-- 업데이트 :: 관리자가 수락을 하면 Y로 바뀌고 -->
	<update id="confirmRequestDream" parameterType="java.util.Map">
		UPDATE dream SET
		confirmRequestDream=#{confirm} WHERE dreamId = #{dreamId}
	</update>

	<!-- paymentRM -->
	<!-- 160623 paymentDate 추가 -->
	<resultMap type="payment" id="paymentRM">
		<result property="paymentId" column="paymentId" />
		<result property="rewardVO.rewardId" column="rewardId" />
		<result property="memberId" column="memberId" />
		<result property="paymentState" column="paymentState" />
		<result property="money" column="money" />
		<result property="paymentDate" column="paymentDate" />
	</resultMap>

	<!-- 결제 내역 가져오기 160623 paymentDate 추가 -->
	<select id="getPaymentHistoryByMemberId" parameterType="int"
		resultMap="paymentRM">
		SELECT paymentId, rewardId, memberId, paymentState, money, paymentDate
		FROM payment
		WHERE memberId = #{value}
	</select>

	<!-- 결제 내역에서 응원한 꿈 정보 가져오기(응원 현황보기) :: 꿈번호를 받아서 꿈 상세 정보 보기를 돌린다.. -->
	<!-- 160623 -->
	<select id="cheerUpList" parameterType="int" resultMap="dreamRM">
		SELECT
		dreamId, dream_newFilename, titleDream, TO_char(endDate, 'yyyy-MM-dd')
		AS endDate
		FROM dream
		WHERE dreamId=(
		SELECT r.dreamId
		FROM payment p ,
		reward r
		WHERE r.rewardId = p.rewardId AND p.memberId = #{value})
	</select>
	<!-- 160615 수정 -->
	<!-- dreamId로 후원금 확인 -->
	<select id="getMoneyByDreamId" parameterType="int" resultType="int">
		SELECT money
		FROM payment p, reward r
		WHERE r.rewardId = p.rewardId AND
		paymentState = 'Y' AND
		r.dreamId = #{value}
	</select>


	<!-- 후원금 전체 가져오기 :: 통계시 사용 -->
	<select id="getAllMoney" resultType="int">
		SELECT money FROM payment
		WHERE paymentState='Y'
	</select>

	<!-- 160621 결제 취소 쿼리문 변경 -->
	<!-- 응원취소 :: 결제 취소 -->
	<delete id="cancelPaymentByPaymentId" parameterType="int">
		UPDATE payment SET   
		paymentState='N' WHERE paymentId = #{value}
	</delete>

	<!-- 결제하기(응원하기) 160623 paymentDate 추가 -->
	<insert id="payment" parameterType="payment">
		<selectKey keyProperty="paymentId" resultType="int" order="BEFORE">
			SELECT payment_seq.nextVal FROM dual
		</selectKey>

		INSERT
		INTO payment (paymentId, rewardId, memberId, paymentState,
		money, paymentDate)
		VALUES(#{paymentId}, #{rewardVO.rewardId}, #{memberId},'Y',
		#{money}, sysdate)
	</insert>

	<!-- 꿈에 대한 보상 가져오기 :: getRewardByDreamId -->
	<select id="getRewardByDreamId" parameterType="int" resultType="reward">
		select rewardId, dreamId, rewardInfo, rewardGuide, stock
		from reward
		where dreamId = #{value}
	</select>

	<!-- 보상 재고 업데이트 -->
	<update id="updateStock" parameterType="int">

	</update>

	<!--내꿈 신청 현황 보기 :: requestStateDream -->
	<select id="requestStateDream" parameterType="int" resultMap="dreamRM">
		<include refid="select_dreams"></include>
		WHERE memberId = #{value}
	</select>


	<!-- confirm Y//N 구분해서 띄워줌 -->
	<select id="getAllDreamByConfirmRequestDream" resultMap="dreamRM"
		parameterType="string">
		<include refid="select_dreams" />
		WHERE confirmRequestDream = #{value}
		ORDER BY startDate
	</select>

	<!-- 160622 update_writeDate 추가 -->
	<!-- updateDreamListRM -->
	<resultMap type="updateDream" id="updateDreamListRM">
		<result property="dreamVO.dreamId" column="dreamId" />
		<result property="dreamVO.titleDream" column="titleDream" />
		<result property="update_detailDream" column="update_detailDream" />
		<result property="update_orgFilename" column="update_orgFilename" />
		<result property="update_newFilename" column="update_newFilename" />
		<result property="update_writeDate" column="update_writeDate"/>
	</resultMap>

	<!-- 알림받기 :: alarm -->
	<!-- 160705 수정 -->
	<select id="alarm" parameterType="int" resultMap="updateDreamListRM">
		SELECT
		u.dreamId,o.titleDream,u.update_detailDream,u.update_orgFilename,u.update_newFilename,u.update_writedate
		FROM updatedream u,dream o,(select r.dreamid FROM 
		(SELECT rewardid FROM payment 
		WHERE paymentstate='Y' AND memberid=#{value}) p, 
		reward r WHERE r.rewardid=p.rewardid) d 
		WHERE d.dreamid=u.dreamid and d.dreamid=o.dreamid
		ORDER BY update_writedate DESC
	</select>


	<!-- AdminRM :: AdminDreamListRM -->
	<resultMap type="dream" id="AdminDreamListRM">
		<result property="dreamId" column="dreamId" />
		<result property="confirmRequestDream" column="confirmRequestDream" />
		<result property="titleDream" column="titleDream" />
		<result property="requestDate" column="requestDate" />
		<result property="memberVO.memberId" column="memberId" />
		<result property="memberVO.email" column="email" />
		<result property="dream_newFilename" column="dream_newFilename" />
	</resultMap>


	<!-- Admin 신청된 꿈 목록 보기 -->
	<select id="getAllListDreamForAdmin" resultMap="AdminDreamListRM">
		select
		m.memberid, m.email, d.dreamid,
		d.DREAM_NEWFILENAME,CONFIRMREQUESTDREAM,TITLEDREAM,TO_char(REQUESTDATE,
		'yyyy-MM-dd') AS requestDate
		from member m, (select * from dream order
		by requestdate desc) d
		where m.memberid=d.memberid
		order by
		confirmrequestdream asc
	</select>

	<!-- 한천 : 필터 Query 추가 -->
	<!-- 최고금액 순 :: getAllListDreamOrderByMoney -->
	<select id="getAllListDreamOrderByMoney" resultMap="dreamRM">
		SELECT
		d.dreamId, memberId AS "memberVO.memberId", category,
		dream_newFilename, confirmRequestDream,
		titleDream, detailDream,
		requestDate, targetFund,
		TO_char(startDate, 'yyyy-MM-dd') AS startDate,
		TO_char(endDate, 'yyyy-MM-dd') AS endDate from
		(select dreamid from
		(select r.dreamid,sum(money) as currmoney from
		payment p,reward r where
		p.rewardid=r.rewardid and p.paymentstate='Y' group
		by dreamid order by
		currmoney desc)) p ,
		dream d where p.dreamid =
		d.dreamid and
		d.confirmrequestdream ='Y'
	</select>
	<!-- 최다 후원자 순 :: getAllListDreamOrderByManyPeople -->
	<select id="getAllListDreamOrderByManyPeople" resultMap="dreamRM">
		select
		d.dreamId, memberId AS "memberVO.memberId", category,
		dream_newFilename, confirmRequestDream,
		titleDream, detailDream,
		requestDate, targetFund,
		TO_char(startDate, 'yyyy-MM-dd') AS startDate,
		TO_char(endDate, 'yyyy-MM-dd') AS endDate
		from (select
		r.dreamid,sum(count) as count from
		reward r,(select rewardid, count(-1)
		as count from
		payment where paymentstate='Y' group by rewardid) p
		where
		r.rewardid=p.rewardid group by dreamid order by count desc) p
		,dream d
		where p.dreamid = d.dreamid and d.confirmrequestdream='Y'
	</select>
	<!-- 마감 일순 :: getAllListDreamOrderByEndDate -->
	<select id="getAllListDreamOrderByEndDate" resultMap="dreamRM">
		<include refid="select_dreams" />
		where confirmrequestdream ='Y' and enddate>=(select
		to_char(sysdate,'yy/MM/dd') from dual)
		order by enddate asc
	</select>

	<!-- ////////////////////////// 20160614 ////////////////////////////////////// -->
	<!-- 160623 날짜 받아오는 부분 추가 -->
	<select id="updateDreamFindByDreamId" parameterType="int"
		resultMap="updateDreamListRM">
		SELECT dreamId, update_detailDream, update_newFilename, 
		TO_char(update_writeDate, 'yyyy-MM-dd') AS update_writeDate
		FROM updateDream
		WHERE dreamId=${value}
		ORDER BY update_writeDate DESC
	</select>

	<insert id="updateDream" parameterType="updateDream">
		INSERT INTO updateDream
		(dreamId, update_detailDream, update_orgFilename, update_newFilename ,update_writeDate)
		VALUES (#{dreamVO.dreamId}, #{update_detailDream},
		#{update_orgFilename}, #{update_newFilename},sysdate)
	</insert>

	<!-- ////////////////////////////////////////////////////////////////////////////////////////// -->

	<!-- //////////////////////////// 20160614 수정 ///////////////////////////// -->
	<!-- 댓글 작성하기 -->
	<insert id="writeComment" parameterType="reply">
		<selectKey keyProperty="replyId" resultType="int" order="BEFORE">
			SELECT reply_seq.nextVal FROM dual
		</selectKey>

		INSERT
		INTO reply(replyId, dreamId,memberId,content,writeDate)
		VALUES(#{replyId},
		#{dreamVO.dreamId},#{memberVO.memberId},#{content},sysdate)
	</insert>


	<!-- 댓글 DreamId로 찾아와서 읽기 수정 160615 160622 -->
	<select id="readComment" parameterType="int" resultType="reply">
		select m.name AS "memberVO.name", m.member_newFilename AS "memberVO.member_newFilename", m.memberId AS "memberVO.memberId",
				r.replyId, r.dreamId, r.content, To_char(r.writeDate, 'yyyy-MM-dd') AS writeDate
		from member m ,(SELECT
						r.replyId, r.dreamId, r.content, r.writeDate, r.memberId
						FROM reply r, dream d
						WHERE r.dreamId = #{value} AND r.dreamId = d.dreamId) r
		WHERE r.memberid=m.memberid
		ORDER BY replyId DESC
	</select>

	<!-- 수정 160622 댓글 삭제하기 :: deleteCommentByReplyId -->
	<delete id="deleteCommentByReplyId" parameterType="int">
		DELETE
		FROM reply
		WHERE
		replyId = #{value}
	</delete>

	<!-- dream의 memberId를 통해 회원 정보 가져오기 -->
	<select id="getMemberByDream" parameterType="int" resultType="member">
		SELECT m.memberId, m.email, m.name, m.phoneNumber, m.member_newFilename
		FROM
		member m, dream d
		WHERE m.memberId = d.memberId AND dreamId = #{value}
	</select>
	<!-- ////////////////////////////////////////////////////////////////////////////////// -->

	<!-- 수정 160615 -->
	<!-- dreamId로 후원자 정보 가져오기 -->
	<select id="getPaymentMemberByDreamId" parameterType="int"
		resultType="member">
		select m.memberid, m.email, m.name, m.member_newfilename
		from member m,
		(SELECT memberId FROM (SELECT rewardId FROM reward WHERE dreamId= #{value})
		r,
		(SELECT * FROM payment WHERE paymentState='Y') p WHERE
		p.rewardId=r.rewardId) r
		where r.memberid = m.memberid
	</select>
	<!-- 추가 160615 -->
	<!-- dreamid로 결재 후원자수 가져오기 -->
	<select id="getCountPaymentByDreamId" parameterType="int"
		resultType="int">
		select count(-1) from
		(select rewardid from reward where dreamid=#{value}) r,payment p
		where p.rewardid = r.rewardid and p.paymentstate='Y'
	</select>
	<!-- 160616 -->
	<!-- 해당 꿈에 대한 댓글 갯수 카운트 -->
	<select id="getCountReplyByDreamId" parameterType="int"
		resultType="int">
		SELECT count(-1)
		from reply
		WHERE dreamId = #{value}
	</select>

	<!-- 해당 꿈에 대한 업데이트 갯수 카운트 -->
	<select id="getCountUpdateDreamByDreamId" parameterType="int"
		resultType="int">
		select count(-1)
		from updateDream
		WHERE dreamId = #{value}
	</select>

	<!-- 160616 -->
	<!-- 보상 재고 업데이트 -->
	<update id="updatePlusStockByRewardId" parameterType="int">
		Update reward set stock =stock+1 WHERE rewardId = #{value}
	</update>
	<update id="updateMinusStockByRewardId" parameterType="int">
		Update reward set stock =stock-1 WHERE rewardId = #{value}
	</update>
	
	<!-- 160705 member추가 -->
	<!-- 160621 myDreamRM,getAllMySupportProject 수정 -->
	<!-- ////////////////////////////////////////////////////////////////////////// -->
	<!-- memberId로 moredream 현황 보기에 필요한 모든 정보를 가져옴니다. -->
	<resultMap type="myDream" id="myDreamRM">
      <result property="memberVO.name" column="name"/>
      <result property="memberVO.member_newFilename" column="member_newFilename"/>
      <result property="paymentVO.paymentState" column="paymentState"/>
      <result property="paymentVO.paymentId" column="paymentId"/>
      <result property="paymentVO.money" column="money"/>
      <result property="paymentVO.paymentDate" column="paymentDate"/><!-- 160623 -->
      <result property="rewardVO.rewardId" column="rewardId"/>
      <result property="dreamVO.dreamId" column="dreamId"/>
      <result property="dreamVO.targetFund" column="targetFund"/>
      <result property="dreamVO.category" column="category"/>
      <result property="dreamVO.titleDream" column="titleDream"/>
      <result property="dreamVO.dream_newFilename" column="dream_newFilename"/>
      <result property="dreamVO.startDate" column="startDate"/>
      <result property="dreamVO.endDate" column="endDate"/>
      <result property="rewardVO.rewardInfo" column="rewardInfo"/>
   </resultMap>

	
   <!-- 모아드림 현황 페이지 -->
   <select id="getAllMySupportProject" parameterType="int"
      resultMap="myDreamRM">
      SELECT m.name, m.member_newFilename, p.money AS money, TO_char(p.paymentDate, 'yyyy-MM-dd') AS paymentDate,  r.rewardId AS rewardId,
            d.targetFund AS targetFund, d.dreamId AS dreamId, d.titleDream AS titleDream, d.dream_newFilename AS dream_newFilename, TO_char(d.startDate, 'yyyy-MM-dd') AS startDate,
            d.category AS category, TO_char(d.endDate, 'yyyy-MM-dd') AS endDate,
            r.rewardinfo AS rewardInfo,p.paymentId AS paymentId, p.paymentState AS paymentState
            FROM payment p, dream d, reward r, member m
            WHERE m.memberId = d.memberId AND p.memberId=#{value} and r.rewardId = p.rewardId and d.dreamId = r.dreamId
            ORDER BY paymentState DESC, paymentDate DESC
      
   </select>

	<!-- memberId로 Dream정보를 가져옴 -->
	<select id="getAllMyDreamByMemberId" parameterType="int"
		resultType="dream">
			SELECT * FROM dream WHERE memberId = #{value}
	</select>

	<!-- ///////////////////////////////////////////////////////////////////////////// -->
	
	<!-- 160704 help3 -->
	<select id="getAllDreamCnt" resultType="int">
		SELECT count(-1) FROM dream
	</select>
	<select id="getAllMemberCnt" resultType="int">
		SELECT count(-1) FROM member
	</select>
	<select id="getTotalMoney" resultType="int">
		SELECT sum(money) FROM payment
	</select>
	
	<!-- 160705 help3 성공한 프로젝트 -->
	<select id="getSuccessDream" resultMap="myDreamRM">
		SELECT r.dreamId, sum(p.money) AS money
		FROM reward r, payment p 
		WHERE r.rewardId = p.rewardId AND paymentState='Y' 
		GROUP BY r.dreamId 
		order by dreamId
	</select>
	
	<!-- 160705 -->
	<!-- 해당 사람에 대한(memberId로) 응원 꿈 갯수 카운트 -->
	<select id="getCountPaymentDreamByMemberId" parameterType="int"
		resultType="int">
		SELECT count(-1)
		FROM payment
		WHERE memberId = #{value} AND paymentstate='Y'
	</select>
	<!-- 해당 사람에 대한(memberId로) 진행 꿈 갯수 카운트 -->
	<select id="getCountCreateDreamByMemberId" parameterType="int"
		resultType="int">
		SELECT count(-1)
		FROM dream
		WHERE memberId = #{value} AND confirmrequestdream='Y'
	</select>
	<!-- 160706 -->
	<!-- 다른사람 모아드림 현황 페이지 -->
   <select id="getAllYourSupportProject" parameterType="int"
      resultMap="myDreamRM">
      SELECT m.name, m.member_newFilename, p.money AS money, TO_char(p.paymentDate, 'yyyy-MM-dd') AS paymentDate,  r.rewardId AS rewardId,
            d.targetFund AS targetFund, d.dreamId AS dreamId, d.titleDream AS titleDream, d.dream_newFilename AS dream_newFilename, TO_char(d.startDate, 'yyyy-MM-dd') AS startDate,
            d.category AS category, TO_char(d.endDate, 'yyyy-MM-dd') AS endDate,
            r.rewardinfo AS rewardInfo,p.paymentId AS paymentId, p.paymentState AS paymentState
            FROM payment p, dream d, reward r, member m
            WHERE m.memberId = d.memberId AND p.memberId=#{value} and r.rewardId = p.rewardId and d.dreamId = r.dreamId
            ORDER BY paymentState DESC, paymentDate DESC
      
   </select>
	
</mapper>	

 